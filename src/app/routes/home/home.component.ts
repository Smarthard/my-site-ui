import {Component, OnInit, SecurityContext} from '@angular/core';
import {Article} from "../../shared/api/Article";
import {ArticlesService} from "../../services/api/articles/articles.service";
import {DomSanitizer} from "@angular/platform-browser";
// import {AuthService} from "../../services/api/auth.service";
import {PageEvent} from "@angular/material";

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {

  public articles: Article[] = [];
  public pageSize: number = 10;
  public allArticlesCount: number = 0;

  private prevPageEvent: PageEvent;

  constructor(private articlesService: ArticlesService, private sanitizer: DomSanitizer) { }

  ngOnInit() {
    this.refresh();
  }

  private refresh(limit: number = this.pageSize, offset: number = 0) {
    this.articlesService.getAll(limit, offset).then(values => {
      this.articles = values;

      this.articles.forEach(value => {
        value.name = this.sanitizer.sanitize(SecurityContext.HTML, value.name);
        value.text = this.sanitizer.sanitize(SecurityContext.HTML, value.text);
      });
    }).catch(err => {
      console.error(err);
    });

    this.getArticlesCount();
  }

  private getArticlesCount() {
    this.articlesService.count().then(value => {
      this.allArticlesCount = value;
    }).catch(err => {
      console.error(err);
    })
  }

  private changePage(event: PageEvent) {
    this.prevPageEvent = event;

    this.refresh(event.pageSize, event.pageIndex * event.pageSize);
  }

  /* Will be removed then auth would implemented

  private remove(id: string) {
    this.articlesService.delete(id).then( value => this.refreshCurrentPage() );
  }

  private add() {
    this.articlesService.create(new Article({
      name: "Generated " + Math.round(Math.random() * 1000),
      text: "autogenerated"
    })).then(value => this.refreshCurrentPage() );
  }

  private refreshCurrentPage() {
      if (this.prevPageEvent) {
          this.refresh(this.prevPageEvent.pageSize, this.prevPageEvent.pageIndex * this.prevPageEvent.pageSize);
      } else {
          this.refresh();
      }
  }

  */
}
